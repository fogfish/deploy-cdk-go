name: spawner-cdk-go

description: 'xxx'

author: "xxx"

branding:
  icon: "alert-triangle"
  color: "blue"

inputs:
  go-version:
    description: |
      xxx
    required: true
    default: 1.18

  stack:
    description: |
      xxx
    required: true

  version:
    description: |
      xxx
    required: true

  aws-access-key:
    description: |
      xxx
    required: true

  aws-secret-key:
    description: |
      xxx
    required: true

  aws-region:
    description: |
      xxx
    required: false
    default: eu-west-1

runs:
  using: "composite"
  steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.go-version }}
        cache: true

    - name: setup-cdk
      shell: bash
      run: |
        npm install -g aws-cdk

    - name: aws access
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key }}
        aws-secret-access-key: ${{ inputs.access-secret-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: cdk deploy
      shell: bash
      run: |
        cdk deploy ${{ matrix.stack }}-${{ inputs.version }} \
          -c vsn=${{ inputs.version }} \
          --outputs-file $GITHUB_WORKSPACE/stack.json
      env:
        GOPATH: /home/runner/go
        GOCACHE: /home/runner/.cache/go-build
        GOMODCACHE: /home/runner/go/pkg/mod

    ##
    ## discover url of deployed api and runs api testing   
    - id: discover
      shell: bash
      run: |
        echo ::set-output name=target::$(jq -r '.["${{ matrix.stack }}-${{ inputs.version }}"] | to_entries | .[] | select(.key|test("GatewayEndpoint.*")) | .value ' < $GITHUB_WORKSPACE/stack.json)

    - uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.number }}
        body: |
          Sandbox for **${{ matrix.stack }}** is deployed to cloud environment:
          - **url**: ${{ steps.discover.outputs.target }}
        reactions: rocket
